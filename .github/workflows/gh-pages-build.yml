name: gh-pages-build

on:
  workflow_dispatch:
    inputs:
      skip_link_checker:
        description: "Skip Link Checker"
        type: boolean
        required: false
        default: false
  push:
    branches-ignore:
      - renovate/**

permissions: read-all

jobs:
  gh-pages-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set Variables
        id: variables
        run: |
          set -euo pipefail
          CLOUDFLARE_PAGES_PROJECT=$(echo "${GITHUB_REPOSITORY#*/}" | tr . - )

          BASE_DOMAIN="${GITHUB_REPOSITORY#*/}"

          echo "BASE_DOMAIN=${BASE_DOMAIN}" | tee -a "${GITHUB_OUTPUT}"
          echo "CLOUDFLARE_PAGES_PROJECT=${CLOUDFLARE_PAGES_PROJECT}" | tee -a "${GITHUB_OUTPUT}"
          sed -i "s@^url: .*@url: 'https://${BASE_DOMAIN}'@" _config.yml
          mkdir public

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3
          bundler-cache: true

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          bundle exec htmlproofer public \
            --disable-external=true \
            --ignore-urls "/^http://127.0.0.1/,/^http://0.0.0.0/,/^http://localhost/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          force_orphan: true

      - name: Restore lychee cache
        uses: actions/cache@v3
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-

      - name: Link Checker
        uses: lycheeverse/lychee-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "--cache --max-cache-age 1d https://${{ steps.variables.outputs.BASE_DOMAIN }}"
          fail: ${{ inputs.skip_link_checker && 'false' || 'true' }}
